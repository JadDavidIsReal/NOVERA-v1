/* ----------------------------------------
   Novera - Visual Interface (Refactored Merge)
   Combines "Executive Flame Design (Phase 1B)" and "Phase 1-A.2"
   ---------------------------------------- */

/* --- CSS Custom Properties (Variables) --- */
:root {
  /* --- Fonts --- */
  --brand-font: 'Segoe UI', 'Helvetica Neue', 'Roboto', 'Arial', sans-serif;

  /* --- Base Colors --- */
  --text-color: #e0e0e0;
  --background-color: #05070a; /* From style.css */

  /* --- Executive Flame Design (Phase 1B) - Default --- */
  --executive-orb-bg-dark: #1018299e;
  --executive-orb-bg-light: #1a2233;
  --executive-glow-color: rgba(220, 225, 240, 0.8); /* Crisp, pale silver */
  --executive-highlight-color: rgba(255, 255, 255, 0);
  --executive-subtitle-color: rgba(220, 225, 240, 0.7);

  /* --- Phase 1-A.2 Design --- */
  --phase1a2-orb-gradient-start: #2bd0ff; /* Bright Blue */
  --phase1a2-orb-gradient-end: #7f00ff;   /* Vivid Purple */
  --phase1a2-glow-inner-color: rgba(43, 208, 255, 0.6);
  --phase1a2-glow-outer-color-1: rgba(43, 208, 255, 0.2);
  --phase1a2-glow-outer-color-2: rgba(127, 0, 255, 0.2);
  --phase1a2-ripple-color: rgba(43, 208, 255, 0.7);
  --phase1a2-core-wave-color: rgba(255, 255, 255, 0.8);

  /* --- Currently Active Theme --- */
  --active-orb-bg-dark: var(--executive-orb-bg-dark);
  --active-orb-bg-light: var(--executive-orb-bg-light);
  --active-glow-color: var(--executive-glow-color);
  --active-highlight-color: var(--executive-highlight-color);
  --active-subtitle-color: var(--executive-subtitle-color);
  --active-orb-gradient-start: var(--phase1a2-orb-gradient-start);
  --active-orb-gradient-end: var(--phase1a2-orb-gradient-end);
  --active-glow-inner-color: var(--phase1a2-glow-inner-color);
  --active-glow-outer-color-1: var(--phase1a2-glow-outer-color-1);
  --active-glow-outer-color-2: var(--phase1a2-glow-outer-color-2);
  --active-ripple-color: var(--phase1a2-ripple-color);
  --active-core-wave-color: var(--phase1a2-core-wave-color);
}

/* --- General Setup --- */
html, body {
    margin: 0;
    padding: 0;
    width: 100%;
    /* height: 100%;  Using 100vh can sometimes cause issues with mobile browsers.
                      If full viewport height is crucial, consider a JS-based solution or test carefully. */
    height: 100vh;
    background-color: var(--background-color);
    color: var(--text-color);
    font-family: var(--brand-font);
    overflow: hidden;
    position: relative;
}

/* --- Layout Containers --- */
.novera-header {
    position: absolute;
    top: 2rem;
    left: 2rem;
    z-index: 10;
    padding: 0; /* Remove padding from style.css */
}

.main-content {
    display: flex;
    justify-content: center;
    align-items: center;
    width: 100%;
    height: 100%;
}

.settings-footer {
    position: absolute;
    bottom: 2rem;
    right: 2rem;
    z-index: 10;
    padding: 0; /* Remove padding from style.css */
}

/* --- UI Elements --- */
.novera-header h1 {
    font-size: 1.4rem;
    font-weight: 300;
    letter-spacing: 0.05em;
    color: var(--text-color); /* Use variable */
    margin: 0;
    padding: 0;
}

.settings-icon {
    width: 24px;
    height: 18px;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    cursor: pointer;
}

.settings-icon span {
    display: block;
    width: 100%;
    height: 2px;
    background-color: var(--text-color); /* Use variable */
    opacity: 0.7; /* Match style.css */
    transition: background-color 0.3s ease, opacity 0.3s ease, transform 0.3s ease; /* Added opacity */
}

.settings-icon:hover span {
    /* Default to Executive style text color change on hover */
    background-color: var(--text-color);
    opacity: 1;
}

/* --- Orb Container & Base Orb --- */
.orb-container {
    position: relative; /* Needed for absolute positioning of pseudo-elements and ripple */
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    gap: 1.5rem; /* From style.css */
}

.orb {
    width: 20vw; /* Use larger size from style.css as default */
    height: 20vw;
    min-width: 280px; /* Use larger min size from style.css as default */
    min-height: 280px;
    position: relative;
    border-radius: 50%;
    /* --- Base Executive Flame Style --- */
    background: radial-gradient(circle at 60% 30%, var(--active-orb-bg-light), var(--active-orb-bg-dark) 80%);
    box-shadow: inset 0 0 50px 10px #000, 0 0 10px -2px var(--active-glow-color);
    cursor: pointer;
    animation: breathe 8s ease-in-out infinite; /* Start with idle animation */
    z-index: 1; /* Ensure orb is above ripple */
}

/* --- Executive Flame Specific Elements --- */
/* Glossy Highlight */
.orb::before {
    content: '';
    position: absolute;
    top: 5%; left: 15%;
    width: 70%; height: 20%;
    border-radius: 50%;
    background: radial-gradient(circle, var(--active-highlight-color), transparent 65%);
    opacity: 0.2;
}

/* Sonar Ripples (Idle) */
.orb::after {
    content: '';
    position: absolute;
    top: 0; left: 0;
    width: 100%; height: 100%;
    border-radius: 50%;
    box-shadow: 0 0 0 2px var(--active-glow-color);
    animation: sonar-ripple 4s ease-out infinite;
    opacity: 0;
}

.heat-haze {
    position: absolute;
    top: -10%; left: -10%;
    width: 120%; height: 120%;
    border-radius: 50%;
    animation: heat-shimmer 10s ease-in-out infinite alternate;
    pointer-events: none; /* Don't interfere with orb clicks */
}

.loading-ring {
    position: absolute;
    top: -5%; left: -5%;
    width: 110%; height: 110%;
    border-radius: 50%;
    border: 2px solid transparent;
    border-top-color: var(--active-glow-color);
    opacity: 0;
    transform: rotate(0deg);
    transition: opacity 0.3s ease;
    pointer-events: none; /* Don't interfere */
}

/* --- Phase 1-A.2 Specific Elements (Initially Hidden/Inactive) --- */
/* Inner Glow */
.inner-glow {
    position: absolute;
    width: 100%;
    height: 100%;
    border-radius: 50%;
    box-shadow: inset 0 0 20px 8px var(--active-glow-inner-color);
    opacity: 0; /* Hidden by default */
    transition: opacity 0.5s ease;
    pointer-events: none;
    z-index: -1; /* Behind the main orb content */
}

/* Outer Glow */
.outer-glow {
    position: absolute;
    width: 100%;
    height: 100%;
    border-radius: 50%;
    box-shadow: 0 0 40px 15px var(--active-glow-outer-color-1), 0 0 80px 40px var(--active-glow-outer-color-2);
    opacity: 0; /* Hidden by default */
    transition: opacity 0.5s ease, box-shadow 4s ease-in-out; /* Add transition for glow pulse */
    animation: glowPulse 4s ease-in-out infinite; /* Add glow pulse animation */
    pointer-events: none;
    z-index: -1; /* Behind the main orb content */
}

/* Halo Ripple */
.ripple {
    position: absolute;
    width: 100%;
    height: 100%;
    border-radius: 50%;
    border: 2px solid var(--active-ripple-color);
    transform: scale(0.8);
    opacity: 0;
    animation: haloRipple 3s ease-out infinite;
    animation-delay: 1s;
    z-index: 0; /* Below the orb itself */
    pointer-events: none;
}

/* Core Waveform */
.core-waveform {
    position: relative;
    width: 50%;
    height: 50%;
    display: flex;
    justify-content: space-around;
    align-items: flex-end;
    z-index: 2;
    filter: blur(1px);
    opacity: 0; /* Hidden by default */
    transition: opacity 0.5s ease;
    pointer-events: none;
}

.core-waveform span {
    width: 10%;
    height: 10%;
    background-color: var(--active-core-wave-color);
    border-radius: 2px;
    animation: waveform 1.5s ease-in-out infinite alternate;
    opacity: 0.4; /* Match initial opacity from styles.css */
}

/* Stagger the animation for each bar */
.core-waveform span:nth-child(1) { animation-delay: 0s; }
.core-waveform span:nth-child(2) { animation-delay: 0.2s; }
.core-waveform span:nth-child(3) { animation-delay: 0.4s; }
.core-waveform span:nth-child(4) { animation-delay: 0.6s; }
.core-waveform span:nth-child(5) { animation-delay: 0.8s; }


/* --- Orb Core (Common Element) --- */
.orb-core {
    position: absolute;
    top: 50%; left: 50%;
    width: 8px; height: 8px;
    margin: -4px 0 0 -4px;
    border-radius: 70%;
    background: #ffffff42; /* Keep this specific color */
    box-shadow: 0 0 15px 3px var(--active-glow-color); /* Use active glow color */
    z-index: 3; /* Above other orb elements */
}


/* --- Text Displays --- */
.subtitle-container {
    height: 3.5rem;
    text-align: center;
    display: flex;
    flex-direction: column;
    justify-content: flex-end;
    position: relative;
    z-index: 5; /* Bring to front */
    margin-top: -1rem; /* Move below orb */
}

.transcription {
    font-size: 0.9rem;
    font-weight: 300;
    color: var(--active-subtitle-color);
    opacity: 0.7;
    min-height: 1.2rem;
    margin: 0 0 0.3rem 0;
    transition: opacity 0.3s ease;
}

.subtitle {
    font-size: 1rem;
    font-weight: 300;
    letter-spacing: 0.05em;
    color: var(--active-subtitle-color);
    opacity: 0;
    transition: opacity 0.5s ease;
    position: relative;
    z-index: 5; /* Bring to front */
}

.subtitle.visible {
    opacity: 1;
}

.instructions {
    font-size: 0.85rem;
    color: rgba(255, 255, 255, 0.7); /* Keep this specific */
    text-align: center;
    margin-top: 1rem;
    font-style: italic;
}


/* ----------------------------------
   KEYFRAMES
   ---------------------------------- */

/* --- Base/Idle Keyframes (Executive Flame Style) --- */
@keyframes breathe {
    0%, 100% { transform: scale(1); }
    50% { transform: scale(1.02); }
}

@keyframes sonar-ripple {
    from { transform: scale(1); opacity: 0.5; }
    to   { transform: scale(1.3); opacity: 0; }
}

@keyframes heat-shimmer {
    from { transform: rotate(0deg) scale(1); box-shadow: 0 0 30px -15px var(--active-glow-color); }
    to   { transform: rotate(90deg) scale(1.05); box-shadow: 0 0 40px -10px var(--active-glow-color); }
}

/* --- State-Specific Keyframes --- */
@keyframes speak-pulse {
    0%, 100% { transform: scale(1); }
    50% { transform: scale(1.5); }
}

@keyframes loading-spin {
    from { transform: rotate(0deg); }
    to   { transform: rotate(360deg); }
}

/* --- Phase 1-A.2 Keyframes --- */
@keyframes glowPulse {
    0%, 100% {
        box-shadow: 0 0 40px 15px var(--active-glow-outer-color-1), 0 0 80px 40px var(--active-glow-outer-color-2);
        opacity: 1;
    }
    50% {
        box-shadow: 0 0 50px 20px rgba(43, 208, 255, 0.35), 0 0 90px 45px rgba(127, 0, 255, 0.35); /* Hardcoded intermediate for effect */
        opacity: 0.8;
    }
}

@keyframes haloRipple {
    0% {
        transform: scale(0.8);
        opacity: 0.7;
    }
    100% {
        transform: scale(2.5);
        opacity: 0;
    }
}

@keyframes waveform {
    from {
        height: 5%;
        opacity: 0.4;
    }
    to {
        height: 95%;
        opacity: 0.9;
    }
}


/* ----------------------------------
   STATE-SPECIFIC STYLING (Executive Flame Base)
   ---------------------------------- */

/* Stop idle animations when any other state is active */
.orb--listening, .orb--thinking, .orb--speaking, .orb--loading {
    animation: none; /* Stop the idle 'breathe' animation */
}
.orb--listening::after, .orb--thinking::after, .orb--speaking::after, .orb--loading::after {
    animation: none; /* Stop the idle 'sonar-ripple' animation */
}

/* LISTENING (Executive Flame Style) */
.orb--listening {
    animation: breathe 2s ease-in-out infinite; /* Faster breathing */
    background: radial-gradient(circle at 60% 30%, var(--active-orb-bg-light), var(--active-orb-bg-dark) 80%);
    box-shadow: inset 0 0 50px 10px #000, 0 0 15px 2px var(--active-glow-color);
}
.orb--listening::after {
    animation: sonar-ripple 1.5s ease-out infinite; /* Faster ripple */
    opacity: 0.5; /* Make ripple visible */
}

/* THINKING (Executive Flame Style) */
.orb--thinking .loading-ring {
    opacity: 1;
    animation: loading-spin 1.5s linear infinite;
}

/* SPEAKING (Executive Flame Style) */
.orb--speaking {
    animation: breathe 1s ease-in-out infinite; /* Faster, more intense pulse */
    box-shadow: inset 0 0 50px 10px #000, 0 0 20px 5px var(--active-glow-color);
}

.orb--speaking .orb-core {
    animation: speak-pulse 0.5s ease-in-out infinite;
}

/* LOADING (Executive Flame Style - retained) */
.orb--loading .loading-ring {
    opacity: 1;
    animation: loading-spin 1s linear infinite;
}


/* ----------------------------------
   SWITCHING TO PHASE 1-A.2 VISUAL STYLE (Optional Enhancement)
   This would be triggered by adding a class like 'theme-phase1a2' to the body or orb.
   Example: body.theme-phase1a2 .orb { ... }
   ---------------------------------- */

/* Apply Phase 1-A.2 base style */
.theme-phase1a2 .orb {
    /* Override Executive Flame background and boxShadow */
    background: radial-gradient(circle, var(--active-orb-gradient-start), var(--active-orb-gradient-end));
    box-shadow: none; /* Remove original boxShadow */

    /* Show Phase 1-A.2 elements */
    animation: idleBreathing 4s ease-in-out infinite;
}

.theme-phase1a2 .inner-glow,
.theme-phase1a2 .outer-glow,
.theme-phase1a2 .ripple {
    opacity: 1; /* Make Phase 1-A.2 elements visible */
}

.theme-phase1a2 .core-waveform {
    opacity: 1; /* Show waveform */
}

/* Hide Executive Flame specific elements when Phase 1-A.2 is active */
.theme-phase1a2 .orb::before,
.theme-phase1a2 .orb::after,
.theme-phase1a2 .heat-haze {
    opacity: 0;
    animation: none;
}

/* State adaptations for Phase 1-A.2 Theme */
.theme-phase1a2 .orb--listening {
    animation: idleBreathing 2s ease-in-out infinite;
    box-shadow: none;
    /* Enhance glow or ripple if desired */
    /* .outer-glow or .ripple animation could be adjusted */
}
.theme-phase1a2 .orb--thinking .loading-ring {
    /* Keep loading ring, or perhaps enhance outer glow? */
    border-top-color: var(--active-glow-color); /* Use active color */
}
.theme-phase1a2 .orb--speaking {
    animation: idleBreathing 1s ease-in-out infinite;
    /* Enhance glow or waveform? */
    /* .outer-glow animation or .core-waveform intensity could be adjusted */
}
.theme-phase1a2 .orb--speaking .orb-core {
     animation: speak-pulse 0.5s ease-in-out infinite;
}
.theme-phase1a2 .orb--loading .loading-ring {
    /* Keep loading ring */
    border-top-color: var(--active-glow-color); /* Use active color */
}


/* ----------------------------------
   RESPONSIVENESS
   ---------------------------------- */
@media (max-width: 768px) {
    /* Adjust orb size for mobile - use style.css values */
    .orb {
        width: 45vw;
        height: 45vw;
        min-width: 220px;
        min-height: 220px;
    }

    /* Adjust header/footer padding for mobile - use style.css values */
    .novera-header {
        top: 1.5rem;
        left: 1.5rem;
    }

    .settings-footer {
        bottom: 1.5rem;
        right: 1.5rem;
    }

    /* Adjust font sizes for mobile - use style.css values */
    .novera-header h1 {
        font-size: 1.2rem;
    }

    .subtitle {
        font-size: 0.9rem; /* Slightly smaller on mobile */
    }

    .transcription {
        font-size: 0.8rem; /* Slightly smaller on mobile */
    }

    .instructions {
        font-size: 0.75rem; /* Slightly smaller on mobile */
    }

    /* Adjust desktop pointer events for mobile - use style.css logic */
    .orb {
        pointer-events: auto; /* Override desktop style */
        cursor: pointer; /* Override desktop style */
    }
    
    /* Adjust subtitle position for mobile */
    .subtitle-container {
        margin-top: -0.5rem;
    }
}

/* Desktop-specific adjustments (if needed beyond mobile defaults) */
@media (min-width: 769px) {
    /* Re-apply desktop pointer events if different from mobile defaults */
    .orb {
        pointer-events: none; /* As per original style.css */
        cursor: default; /* As per original style.css */
    }
}

/* Fade out effect for subtitle */
.subtitle.fade-out {
  opacity: 0;
  transition: opacity 1.5s ease;
}

/* --- Phase 1-A.2 Keyframe (renamed from idleBreathing to avoid conflict) --- */
@keyframes idleBreathing {
    0%, 100% {
        transform: scale(1);
    }
    50% {
        transform: scale(1.03);
    }
}